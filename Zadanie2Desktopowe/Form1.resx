<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hamM69n66wAAAABJRU5ErkJggg==
</value>
  </data>
</root>